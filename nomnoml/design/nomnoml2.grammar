%lex
%%

[^\]\[|;\n]+               return 'IDENT'
\s*\|\s*                   return '|'
"[<"                       return '[<'
"["                        return '['
\s*\]                      return ']'
">"                        return '>'
[ ]*(\;|\n)+[ ]*           return 'SEP'
<<EOF>>                    return 'EOF'
.                          return 'INVALID'

/lex

%start root

%% /* ------------------------------------------------- */

root
    : compartment EOF      { return $1 };

slot
  : IDENT                  {$$ = $1;}
  | class                  {$$ = $1;}
  | association            {$$ = $1;};

compartment
  : slot                   {$$ = [$1];}
  | compartment SEP slot   {$$ = $1.concat($3);};

parts
  : compartment            {$$ = [$1];}
  | parts '|' compartment  {$$ = $1.concat($3);};

association
  : class IDENT class
        {
           var t = $2.trim().match('^([^<:o+-]*)([<:o+]*-+[:o+>]*)(.*)$');
           $$ = {assoc:t[2], start:$1, end:$3, startLabel:t[1].trim(), endLabel:t[3].trim()};
        };

class
  : '[' parts ']'          {$$ = {type:'CLASS', id:$2[0][0], parts:$2};}
  | '[<'IDENT'>'parts']'   {$$ = {type:$2.toUpperCase(), id:$4[0][0], parts:$4};};